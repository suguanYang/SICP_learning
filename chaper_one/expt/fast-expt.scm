(define (fast-expt b n)
        (define (expt-iter b n a)
                (cond ((= 0 n)
                      a)
                      ((= (remainder n 2) 0)
                       (expt-iter (square b) (/ n 2) a))
                      ((= (remainder n 2) 1)
                       (expt-iter b (- n 1) (* a b)))
                      )
                )
        (expt-iter b n 1)
        )
